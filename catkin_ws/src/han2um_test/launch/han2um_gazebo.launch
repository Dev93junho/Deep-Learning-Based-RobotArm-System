<?xml version="1.0"?>
<launch>

  <!-- these are the arguments you can pass this launch file, for example paused:=true 
  <arg name="paused" default="false"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="true"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>-->

  <!-- We resume the logic in empty_world.launch 
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="worlds/mud.world"/>
    <arg name="debug" value="$(arg debug)" />
    <arg name="gui" value="$(arg gui)" />
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="headless" value="$(arg headless)"/>
  </include>-->

 <env name="GAZEBO_MODEL_PATH"
       value="$(find han2um_test)/models:$(optenv GAZEBO_MODEL_PATH)" />

  <!-- Launch file parameters -->
  <arg name="paused"     default="true"/>
  <arg name="debug"      default="false"/>
  <arg name="gui"        default="true"/>
  <arg name="rate"       default="125" />
  <arg name="world_name" default="$(find han2um_test)/worlds/ur5_kitchen.world" />
  <!--ur5_kitchen.world / worldtest.world-->
  <!-- Start up simulated world -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(arg world_name)"/>
    <arg name="paused"     value="$(arg paused)"/>
    <arg name="debug"      value="$(arg debug)"/>
    <arg name="gui"        value="$(arg gui)"/>
  </include>



  <!-- Load the URDF into the ROS Parameter Server -->
  <param name="robot_description" textfile="$(find han2um_test)/urdf/han2um_test.urdf" /> 

  <!-- Run a python script to the send a service call to gazebo_ros to spawn a URDF robot -->
  <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
    args="-urdf -model han2um_test -param robot_description"/> 
   <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />
  <rosparam file="$(find han2um_test)/controllers.yaml" command="load"/>
  <node name="controller_spawner" pkg="controller_manager" type="spawner" args="arm_controller"/>

</launch>
